{"version":3,"sources":["components/settings.js","components/sliders.js","components/canvas.js","components/pages.js","components/buttons.js","components/block.js","components/simulator.js","components/mazeCreator.js","components/gridHandler.js","App.js","index.js"],"names":["Settings","props","Col","Tabs","transition","settings","Slider","useState","current","setCurrent","Container","fluid","style","marginTop","marginBottom","Row","sm","xl","xs","lg","md","FormControl","type","defaultValue","max","min","onChange","changeEvent","target","value","id","Number","event","custom","InputGroup","size","Prepend","Text","sliderList","ranges","map","range","Tab","eventKey","title","name","Canvas","width","height","ref","e","Simulator","initSimulator","PageTabs","settingsList","data","tab","buttonSettings","sliderSettings","canvas","fill","onSelect","key","gridHandler","reset","Buttons","buttonList","buttons","button","Button","as","onClick","variant","Block","x","y","color","this","visited","document","querySelector","ctx","getContext","blockSize","MazeCreator","stack","speed","executionStatus","end","timer","ms","Promise","res","setTimeout","prototype","drawOuter","beginPath","fillStyle","rect","drawInner","c","z","delete","update","removeWall","direction","temp","start","newGrid","gridRow","girdColumn","a","grid","i","row","j","block","push","setBlockSize","randomUnvisitedNeighbor","neighbors","length","unvisitedNeighbors","Math","floor","random","GridHandler","mazeCreator","gridMaker","firstStart","wait","stackRandomizedDFS","nextBlock","undefined","stackRender","element","shift","createMaze","stop","restart","setSpeed","mazeStart","console","log","mazeStop","len","simulator","MAZE_SLIDER_DATA","MAZE_BUTTON_DATA","PATHFINDING_SLIDER_DATA","currentMazeSettings","gridSize","currentPathfindingSettings","MAIN_DATA","currentSettings","App","className","paddingBottom","body","backgroundColor","ReactDOM","render","StrictMode","paddingTop","getElementById"],"mappings":"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","file":"static/js/main.d3703626.chunk.js","sourcesContent":["import { Col, Tabs } from 'react-bootstrap';\n\n\n//Renders the slider tabs\nexport default function Settings(props) {\n    return (\n\n            <Col>\n                <Tabs transition={false} key=\"rangeTab\" >\n                    {props.settings}\n                </Tabs>\n            </Col>\n\n    );\n}","import React, { useState } from 'react';\nimport { FormControl, Row, Col, InputGroup, Tab, Container } from 'react-bootstrap';\n\n\n//Slider form function\n//Changes the corresponding value from main settings\n//Shows current value at the right of slider\nfunction Slider(props) {\n    const [current, setCurrent] = useState(0);\n    return (\n        <Container fluid>\n            <Container style={{\n                marginTop: '0.2em',\n                marginBottom: '0.2em'\n            }}>\n                <Row sm xl xs lg md={10}>\n\n                    <Col xs sm xl lg md={8}>\n                        <FormControl\n                            type=\"range\"\n                            defaultValue={props.current}\n                            max={props.max}\n                            min={props.min}\n                            key={props.id}\n                            onChange={(changeEvent => {\n                                setCurrent(changeEvent.target.value);\n                                props.settings[props.id] = Number(changeEvent.target.value);\n                                props.event(changeEvent.target.value);\n                            })} custom />\n                    </Col>\n                    <Col xs sm xl lg md={2}>\n\n                        <InputGroup size=\"sm\">\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>{current ? current : props.current}</InputGroup.Text>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n            </Container>\n\n        </Container>\n\n    );\n}\n\n//Creates a list of sliders from given data with mapping\n//Get main settings as an input to add them to the change event of the slider\n//Returns the list of sliders as tabs\nexport default function sliderList(ranges, settings) {\n    const rangeList = ranges.map(range => (\n        <Tab\n            key={range.id}\n            eventKey={range.id}\n            title={range.name}\n        >\n            <Slider\n                id={range.id}\n                current={range.current}\n                max={range.max}\n                min={range.min}\n                key={range.id}\n                event={range.event}\n                settings={settings} />\n        </Tab>\n    ));\n\n    return rangeList;\n}","import { Container } from 'react-bootstrap';\n\nlet canvas;\n\nexport default function Canvas(props) {\n    return (\n            <canvas id={props.id}  width={720} height={480} ref={(e) =>\n                props.Simulator.initSimulator(e)\n            } style={{ width: \"100%\", height: \"auto\" }}></canvas>\n    );\n}\n\nexport function getCanvas() {\n    return canvas;\n}","import { Col, Container, Tabs, Tab, Row } from 'react-bootstrap';\nimport Canvas from './canvas'\n\n//Creates the main choice tabs Maze creation, pathfinding etc.\n//Each main tab contains buttons and slider settings\n//Render the content tab\nexport default function PageTabs(props) {\n    const settingsList = props.data.map(tab => (\n        <Tab\n            eventKey={tab.id}\n            title={tab.name}\n            key={tab.id}\n        >\n            <Container style={{\n                marginTop: '0.5em'\n            }}>\n                <Col>\n                    <Row >\n                        {tab.buttonSettings}\n                    </Row>\n                    <Row>\n                        <Container style={{\n                            marginTop: '0.4em'\n                        }}>\n                            {tab.sliderSettings}\n                        </Container>\n                    </Row>\n\n                </Col>\n                {tab.canvas}\n            </Container>\n\n        </Tab >\n    ));\n\n    return (\n        <Container>\n            <Col>\n                <Tabs fill transition={false} key=\"rangeTab\" onSelect={(key,e)=>{\n                    props.gridHandler.reset();\n                }}>\n                    {settingsList}\n                </Tabs>\n            </Col>\n        </Container>\n    );\n}","import { Button, Container } from 'react-bootstrap';\n\n//Maps the button data to actual buttons\n//Render the buttons\nexport default function Buttons(props) {\n\n    const buttonList = props.buttons.map(button => (\n        <>\n            {' '}\n            <Button as=\"input\" type=\"button\" size=\"sm\" value={button.name} key={button.key} onClick={button.event}></Button>\n        </>\n    ));\n    \n    return (\n        <Container variant=\"success\">\n            {buttonList}\n        </Container>\n    );\n}","//Author Burak Keser\n\n//Block object for the grid\nexport function Block(x, y, color, size,) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.size = size;\n    this.visited = false;\n    this.canvas = document.querySelector('canvas');\n    this.ctx = this.canvas.getContext('2d');;\n}\n\n//Draws an empty square for grid\nBlock.prototype.drawOuter = function () {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.rect(this.x, this.y, this.size, this.size);\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'white';\n    this.ctx.rect(this.x + 1, this.y + 1, this.size - 2, this.size - 2);\n    this.ctx.fill();\n}\n//Draw the inner square\nBlock.prototype.drawInner = function (color, c, z) {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = color;\n    this.ctx.rect(this.x + c, this.y + c, this.size - z, this.size - z);\n    this.ctx.fill();\n}\n\n//Deletion of the node from Screen\nBlock.prototype.delete = function () {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'white';\n    this.ctx.rect(this.x, this.y, this.size, this.size);\n    this.ctx.fill();\n}\n//Updates the position of the block\n//Used by moving block\nBlock.prototype.update = function (x, y) {\n    this.x = x;\n    this.y = y;\n}\n//Removes the Wall from given direction\nBlock.prototype.removeWall = function (direction) {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = '#6c757d';\n    let temp = this.size - 2;\n    switch (direction) {\n        case 'up':\n            this.ctx.rect(this.x + 1, this.y - 4, temp, temp);\n            break;\n        case 'down':\n            this.ctx.rect(this.x + 1, this.y + 4, temp, temp);\n            break;\n        case 'left':\n            this.ctx.rect(this.x - 4, this.y + 1, temp, temp);\n            break;\n        case 'right':\n            this.ctx.rect(this.x + 4, this.y + 1, temp, temp);\n            break;\n\n    }\n    this.ctx.fill();\n}\n","\nimport { Block } from './block'\n\nexport default function Simulator() {\n    this.blockSize = 20;\n}\n\nSimulator.prototype.start = function () {\n    this.newGrid()\n};\n\nSimulator.prototype.initSimulator = function (canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.gridRow = (this.height / this.blockSize) - 1;\n    this.girdColumn = (this.width / this.blockSize) - 1;\n    this.start();\n};\n\nSimulator.prototype.newGrid = async function () {\n    let grid = [];\n    for (let i = 0; i < this.height; i += this.blockSize) {\n        let row = []\n        \n        for (let j = 0; j < this.width; j += this.blockSize) {\n            let block = new Block(j, i, 'black', this.blockSize);\n            row.push(block);\n            \n            block.drawOuter();\n            block.drawInner('white', 1, 2);\n        }\n        grid.push(row);\n    }\n    return grid;\n};\n\nSimulator.prototype.setBlockSize = function (size) {\n\n    this.blockSize = size*10;\n}","//Author Burak Keser\nexport default function MazeCreator() {\n    //moving red block\n    this.stack = [];\n    this.speed = 25;\n    this.executionStatus = true;\n    this.reset = false;\n    this.end = false;\n    //Promise for animation\n    this.timer = ms => new Promise(res => setTimeout(res, ms))\n}\n\n//Finds the unvisited neighbor of the given node\nconst unvisitedNeighbors = function (x, y, c, grid) {\n\n    let gridRow = grid.length - 1;\n    let girdColumn = grid[0].length - 1;\n\n    let unvisitedNeighbors = [];\n    //Before the rightmost node and not visited before\n    if (x < girdColumn && !grid[y][x + c].visited) {\n        unvisitedNeighbors.push([x + c, y, 'right']);\n    }\n    //Before the lowermost node and not visited before\n    if (y < gridRow && !grid[y + c][x].visited) {\n        unvisitedNeighbors.push([x, y + c, 'down']);\n    }\n    //before the leftmost node and not visited before\n    if (x > 0 && !grid[y][x - c].visited) {\n        unvisitedNeighbors.push([x - c, y, 'left']);\n    }\n    //before the upmost node and not visited before\n    if (y > 0 && !grid[y - c][x].visited) {\n        unvisitedNeighbors.push([x, y - c, 'up']);\n    }\n    return unvisitedNeighbors;\n}\n\n//Returns random neighbor from unvisited neighbor array\nconst randomUnvisitedNeighbor = function (x, y, grid) {\n    let neighbors = unvisitedNeighbors(x, y, 1, grid);\n    let randomNeighbor = neighbors[Math.floor(Math.random() * neighbors.length)];\n    return randomNeighbor;\n}\n\n//Stops the creation process till the executionStatus becomes false\nMazeCreator.prototype.wait = async function () {\n    while (!this.executionStatus) {\n        await this.timer(1);\n    }\n}\n\nMazeCreator.prototype.stackRandomizedDFS = async function (x, y, grid) {\n    grid[y][x].visited = true;\n    let nextBlock = randomUnvisitedNeighbor(x, y, grid);\n    while (nextBlock !== undefined) {\n        this.stack.push([nextBlock[0], nextBlock[1], x, y, nextBlock[2]]);\n        this.stackRandomizedDFS(nextBlock[0], nextBlock[1], grid);\n        nextBlock = randomUnvisitedNeighbor(x, y, grid);\n    }\n}\n\nMazeCreator.prototype.stackRender = async function (grid) {\n    while (this.stack.length > 0) {\n        let element = this.stack.shift();\n        await this.wait();\n        if (element) {\n            await this.timer(this.speed);\n            grid[element[3]][element[2]].drawInner('#6c757d', 1, 2);\n            grid[element[3]][element[2]].removeWall(element[4]);\n            grid[element[1]][element[0]].drawInner('#6c757d', 1, 2);\n        }\n    }\n}\n\n//wrapper function for maze creation\nMazeCreator.prototype.createMaze = async function (grid) {\n    this.reset = false;\n    await this.stackRandomizedDFS(0, 0, grid);\n    await this.stackRender(grid);\n    this.stack = [];\n    this.executionStatus = false;\n    return this.reset;\n}\n\nMazeCreator.prototype.start = function () {\n    this.executionStatus = true;\n}\n\nMazeCreator.prototype.stop = function () {\n    this.executionStatus = false;\n}\n\nMazeCreator.prototype.restart = function () {\n    this.reset = true;\n    this.executionStatus = true;\n    this.stack = []\n    return this.stack.length\n}\n\nMazeCreator.prototype.setSpeed = function(speed){\n    this.speed = speed;\n}","\nexport default function GridHandler(mazeCreator, gridMaker) {\n    this.firstStart = true;\n    this.mazeCreator = mazeCreator;\n    this.gridMaker = gridMaker;\n    this.grid = this.gridMaker.newGrid();\n}\n\nGridHandler.prototype.mazeStart = async function () {\n    console.log(this.firstStart);\n    if (this.firstStart) {\n        this.firstStart = false;\n        this.grid = await this.gridMaker.newGrid();\n        this.mazeCreator.start();\n        await this.mazeCreator.createMaze(this.grid, this.gridMaker.blockSize);\n        if (this.mazeCreator.reset) {\n            this.mazeCreator.reset = false;\n            this.grid = this.gridMaker.newGrid();\n        }\n\n    } else {\n        if (this.mazeCreator.executionStatus === false) {\n            this.mazeCreator.start();\n        }\n    }\n}\n\nGridHandler.prototype.mazeStop = async function () {\n    if (!this.firstStart && (this.mazeCreator.executionStatus === true)) {\n        this.mazeCreator.stop();\n    }\n}\n\nGridHandler.prototype.reset = async function () {\n    let len = this.mazeCreator.restart();\n    this.firstStart = true\n    if (len === 0) {\n        this.grid = this.gridMaker.newGrid();\n    }\n}","import Settings from './components/settings';\nimport { Container } from 'react-bootstrap';\nimport sliderList from './components/sliders'\nimport PageTabs from './components/pages'\nimport Buttons from './components/buttons'\nimport Simulator from './components/simulator'\nimport React, { useState, useEffect } from 'react';\nimport Canvas from './components/canvas';\nimport MazeCreator from './components/mazeCreator'\nimport GridHandler from './components/gridHandler'\n\nlet simulator = new Simulator();\nlet mazeCreator = new MazeCreator();\nlet gridHandler = new GridHandler(mazeCreator, simulator);\n\n//Contains slider data for maze\nconst MAZE_SLIDER_DATA = [\n  { name: \"Grid Size\", id: \"grid-size\", current: \"2\", max: \"4\", min: \"1\", event: (size) => { simulator.setBlockSize(size); gridHandler.reset(); } },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\", event: (speed) => { mazeCreator.setSpeed((speed-100)*-1) } },\n];\n\n\n//Contains button data for maze\nconst MAZE_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"m1\", event: () => { gridHandler.mazeStart() } },\n  { name: \"Stop\", type: \"stop\", key: \"m2\", event: () => { gridHandler.mazeStop() } },\n  { name: \"Reset\", type: \"reset\", key: \"m3\", event: () => { gridHandler.reset() } }\n]\n\n//Contains slider data for pathfinding\nconst PATHFINDING_SLIDER_DATA = [\n  { name: \"Grid Size\", id: \"grid-size\", current: \"5\", max: \"5\", min: \"1\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n  { name: \"Block Size\", id: \"blockSize\", current: \"4\", max: \"10\", min: \"3\" },\n];\n\n//Contains button data for pathfinding\nconst PATHFINDING_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"p1\" },\n  { name: \"Stop\", type: \"stop\", key: \"p2\" },\n  { name: \"Grid\", type: \"grid\", key: \"p3\" },\n  { name: \"Reset\", type: \"reset\", key: \"p4\" }\n]\n\n//Current maze settings \n//to be used on creation of the canvas field and simulation speed\nlet currentMazeSettings = {\n  gridSize: Number(MAZE_SLIDER_DATA[0].current),\n  speed: Number(MAZE_SLIDER_DATA[1].current)\n}\n\n//Current pathfinding settings \n//to be used on creation of the canvas field, simulation speed\n//and creation of block grid that can be used to create a maze for pathfinding\nlet currentPathfindingSettings = {\n  gridSize: Number(PATHFINDING_SLIDER_DATA[0].current),\n  blockSize: Number(PATHFINDING_SLIDER_DATA[1].current),\n  speed: Number(PATHFINDING_SLIDER_DATA[2].current)\n}\n\n\n\n//Contains main page settings\nconst MAIN_DATA = [\n  {\n    name: \"Maze Creator\",\n    id: 0,\n    currentSettings: currentMazeSettings,\n    sliderSettings: (<Settings settings={sliderList(MAZE_SLIDER_DATA, currentMazeSettings)} />),\n    buttonSettings: (<Buttons buttons={MAZE_BUTTON_DATA} />),\n    simulator: simulator\n  },\n  {\n    name: \"Pathfinding\",\n    id: 1,\n    currentSettings: currentPathfindingSettings,\n    sliderSettings: (<Settings settings={sliderList(PATHFINDING_SLIDER_DATA, currentPathfindingSettings)} />),\n    buttonSettings: (<Buttons buttons={PATHFINDING_BUTTON_DATA} />),\n    simulator: simulator\n  },\n];\n\nfunction App(props) {\n  return (\n    <Container className=\"bg-light rounded-top rounded-bottom\">\n      <PageTabs data={MAIN_DATA} gridHandler={gridHandler} />\n\n      <Container style={{\n        marginTop: '0.5em',\n\n        paddingBottom: 10\n      }} >\n        <Canvas id={0} Simulator={simulator}  />\n      </Container>\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\ndocument.body.style.backgroundColor = \"#343a40\";\nReactDOM.render(\n  <React.StrictMode >\n    <Container fluid>\n      <Container style={{\n        paddingTop: 10,\n        paddingBottom: 5\n      }} fluid>\n        <App />\n      </Container>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}