{"version":3,"sources":["components/settings.js","components/sliders.js","components/choiceTabs.js","components/buttons.js","App.js","index.js"],"names":["Settings","props","Container","fluid","Col","sm","xl","xs","lg","md","span","Tabs","transition","settings","Slider","useState","current","setCurrent","Row","FormControl","type","defaultValue","max","min","onChange","changeEvent","target","value","id","Number","custom","InputGroup","size","Prepend","Text","sliderList","ranges","map","range","Tab","eventKey","title","name","ChoiceTabs","settingsList","choices","tab","buttonSettings","sliderSettings","fill","Buttons","buttonList","buttons","button","Button","as","active","key","variant","MAZE_SLIDER_DATA","PATHFINDING_SLIDER_DATA","currentMazeSettings","width","height","speed","currentPathfindingSettings","blockSize","MAIN_DATA","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.800b5562.chunk.js","sourcesContent":["import { Col, Container, Tabs } from 'react-bootstrap';\n\n\nexport default function Settings(props) {\n    return (\n        <Container fluid>\n            <Col sm xl xs lg md={{ span: \"auto\" }} >\n                <Tabs transition={false} key=\"rangeTab\" >\n                    {props.settings}\n                </Tabs>\n            </Col>\n        </Container>\n    );\n}","import React, { useState } from 'react';\nimport { FormControl, Row, Col, InputGroup, Tab, Container } from 'react-bootstrap';\n\n\nfunction Slider(props) {\n\n    const [current, setCurrent] = useState(0);\n\n    return (\n        <Container fluid>\n\n            <Row sm xl xs lg md={2}>\n                <Col sm xs xl lg md={8}>\n                    <FormControl\n                        type=\"range\"\n                        defaultValue={props.current}\n                        max={props.max}\n                        min={props.min}\n                        key={props.id}\n                        onChange={(changeEvent => {\n                            setCurrent(changeEvent.target.value);\n                            props.settings[props.id] = Number(changeEvent.target.value);\n                        })} custom />\n                </Col>\n                <Col sm xs xl lg md={2}>\n                    <InputGroup size=\"sm\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>{current ? current : props.current}</InputGroup.Text>\n                        </InputGroup.Prepend>\n                    </InputGroup>\n                </Col>\n\n            </Row>\n        </Container>\n\n    );\n}\n\nexport default function sliderList(ranges, settings) {\n    const rangeList = ranges.map(range => (\n        <Tab\n            key={range.id}\n            eventKey={range.id}\n            title={range.name}\n        >\n            <Slider\n                id={range.id}\n                current={range.current}\n                max={range.max}\n                min={range.min}\n                key={range.id}\n                settings={settings} />\n        </Tab>\n    ));\n\n    return rangeList;\n}","import { Col, Container, Tabs, Tab, Row } from 'react-bootstrap';\n\n\nexport default function ChoiceTabs(props) {\n    const settingsList = props.choices.map(tab => (\n        <Tab\n            eventKey={tab.id}\n            title={tab.name}\n            key={tab.id}\n        >\n            <Container>\n                <Col sm xl xs lg md>\n                    <Row sm xl xs lg md>\n                        {tab.buttonSettings}\n                    </Row>\n                    <Row>\n                        {tab.sliderSettings}\n                    </Row>\n                </Col>\n            </Container>\n\n        </Tab >\n    ));\n\n    return (\n        <Container>\n            <Col>\n                <Tabs fill transition={false} key=\"rangeTab\">\n                    {settingsList}\n                </Tabs>\n            </Col>\n        </Container>\n    );\n}","import { Button, Container } from 'react-bootstrap';\n\n\nexport default function Buttons(props) {\n    const buttonList = props.buttons.map(button => (\n        <>\n            {' '}\n            <Button as=\"input\" type=\"button\" active size=\"sm\" value={button.name} key={button.key}></Button>\n        </>\n    ));\n    \n    return (\n        <Container variant=\"success\">\n            {buttonList}\n        </Container>\n    );\n}","import Settings from './components/settings';\nimport { Container } from 'react-bootstrap';\nimport sliderList from './components/sliders'\nimport ChoiceTabs from './components/choiceTabs'\nimport Buttons from './components/buttons'\n\nconst MAZE_SLIDER_DATA = [\n  { name: \"Width\", id: \"width\", current: \"80\", max: \"100\", min: \"8\" },\n  { name: \"Height\", id: \"height\", current: \"45\", max: \"100\", min: \"8\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n];\n\nconst MAZE_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"m1\" },\n  { name: \"Stop\", type: \"start\", key: \"m2\" },\n  { name: \"Reset\", type: \"reset\", key: \"m3\" }\n]\n\nconst PATHFINDING_SLIDER_DATA = [\n  { name: \"Width\", id: \"width\", current: \"80\", max: \"100\", min: \"8\" },\n  { name: \"Height\", id: \"height\", current: \"45\", max: \"100\", min: \"8\" },\n  { name: \"Block Size\", id: \"blockSize\", current: \"4\", max: \"10\", min: \"3\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n];\n\nconst PATHFINDING_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"p1\" },\n  { name: \"Stop\", type: \"start\", key: \"p2\" },\n  { name: \"Grid\", type: \"grid\", key: \"p3\" },\n  { name: \"Reset\", type: \"reset\", key: \"p4\" }\n]\n\nlet currentMazeSettings = {\n  width: Number(MAZE_SLIDER_DATA[0].current),\n  height: Number(MAZE_SLIDER_DATA[1].current),\n  speed: Number(MAZE_SLIDER_DATA[2].current)\n}\n\nlet currentPathfindingSettings = {\n  width: Number(PATHFINDING_SLIDER_DATA[0].current),\n  height: Number(PATHFINDING_SLIDER_DATA[1].current),\n  blockSize: Number(PATHFINDING_SLIDER_DATA[1].current),\n  speed: Number(PATHFINDING_SLIDER_DATA[2].current)\n}\n\nconst MAIN_DATA = [\n  {\n    name: \"Maze\",\n    id: \"maze\",\n    sliderSettings: (<Settings settings={sliderList(MAZE_SLIDER_DATA, currentMazeSettings)} />),\n    buttonSettings: (<Buttons buttons={MAZE_BUTTON_DATA} />)\n\n  },\n  {\n    name: \"Pathfinding\",\n    id: \"pathfinding\",\n    sliderSettings: (<Settings settings={sliderList(PATHFINDING_SLIDER_DATA, currentPathfindingSettings)} />),\n    buttonSettings: (<Buttons buttons={PATHFINDING_BUTTON_DATA} />)\n  },\n];\n\nfunction App(props) {\n  return (\n    <Container className=\"bg-light\">\n      <ChoiceTabs choices={MAIN_DATA} />\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode >\n    <Container className=\"bg-primary\" fluid>\n      <App />\n    </Container>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}