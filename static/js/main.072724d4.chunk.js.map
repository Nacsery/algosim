{"version":3,"sources":["components/settings.js","components/sliders.js","components/canvas.js","components/pages.js","components/buttons.js","components/block.js","components/simulator.js","App.js","index.js"],"names":["Settings","props","Col","Tabs","transition","settings","Slider","useState","current","setCurrent","Container","fluid","style","marginTop","marginBottom","Row","sm","xl","xs","lg","md","FormControl","type","defaultValue","max","min","onChange","changeEvent","target","value","id","Number","custom","InputGroup","size","Prepend","Text","sliderList","ranges","map","range","Tab","eventKey","title","name","Canvas","width","height","ref","e","Simulator","initSimulator","PageTabs","settingsList","data","tab","buttonSettings","sliderSettings","canvas","fill","onSelect","key","simulator","start","Buttons","buttonList","buttons","button","Button","as","variant","Block","x","y","color","this","visited","document","querySelector","ctx","getContext","blockSize","prototype","drawOuter","beginPath","fillStyle","rect","drawInner","c","z","delete","update","removeWall","direction","temp","newGrid","gridRow","girdColumn","grid","i","row","j","block","push","MAZE_SLIDER_DATA","PATHFINDING_SLIDER_DATA","currentMazeSettings","gridSize","speed","currentPathfindingSettings","MAIN_DATA","currentSettings","App","className","body","backgroundColor","ReactDOM","render","StrictMode","paddingTop","paddingBottom","getElementById"],"mappings":"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","file":"static/js/main.072724d4.chunk.js","sourcesContent":["import { Col, Tabs } from 'react-bootstrap';\n\n\n//Renders the slider tabs\nexport default function Settings(props) {\n    return (\n\n            <Col>\n                <Tabs transition={false} key=\"rangeTab\" >\n                    {props.settings}\n                </Tabs>\n            </Col>\n\n    );\n}","import React, { useState } from 'react';\nimport { FormControl, Row, Col, InputGroup, Tab, Container } from 'react-bootstrap';\n\n\n//Slider form function\n//Changes the corresponding value from main settings\n//Shows current value at the right of slider\nfunction Slider(props) {\n    const [current, setCurrent] = useState(0);\n    return (\n        <Container fluid>\n            <Container style={{\n                marginTop: '0.2em',\n                marginBottom: '0.2em'\n            }}>\n                <Row sm xl xs lg md={10}>\n\n                    <Col xs sm xl lg md={8}>\n                        <FormControl\n                            type=\"range\"\n                            defaultValue={props.current}\n                            max={props.max}\n                            min={props.min}\n                            key={props.id}\n                            onChange={(changeEvent => {\n                                setCurrent(changeEvent.target.value);\n                                props.settings[props.id] = Number(changeEvent.target.value);\n                            })} custom />\n                    </Col>\n                    <Col xs sm xl lg md={2}>\n\n                        <InputGroup size=\"sm\">\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>{current ? current : props.current}</InputGroup.Text>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n            </Container>\n\n        </Container>\n\n    );\n}\n\n//Creates a list of sliders from given data with mapping\n//Get main settings as an input to add them to the change event of the slider\n//Returns the list of sliders as tabs\nexport default function sliderList(ranges, settings) {\n    const rangeList = ranges.map(range => (\n        <Tab\n            key={range.id}\n            eventKey={range.id}\n            title={range.name}\n        >\n            <Slider\n                id={range.id}\n                current={range.current}\n                max={range.max}\n                min={range.min}\n                key={range.id}\n                settings={settings} />\n        </Tab>\n    ));\n\n    return rangeList;\n}","import { Container } from 'react-bootstrap';\n\nlet canvas;\n\nexport default function Canvas(props) {\n    return (\n            <canvas id={props.id}  width={720} height={480} ref={(e) =>\n                props.Simulator.initSimulator(e)\n            } style={{ width: \"100%\", height: \"auto\" }}></canvas>\n    );\n}\n\nexport function getCanvas() {\n    return canvas;\n}","import { Col, Container, Tabs, Tab, Row } from 'react-bootstrap';\nimport Canvas from './canvas'\n\n//Creates the main choice tabs Maze creation, pathfinding etc.\n//Each main tab contains buttons and slider settings\n//Render the content tab\nexport default function PageTabs(props) {\n    const settingsList = props.data.map(tab => (\n        <Tab\n            eventKey={tab.id}\n            title={tab.name}\n            key={tab.id}\n        >\n            <Container style={{\n                marginTop: '0.5em'\n            }}>\n                <Col>\n                    <Row >\n                        {tab.buttonSettings}\n                    </Row>\n                    <Row>\n                        <Container style={{\n                            marginTop: '0.4em'\n                        }}>\n                            {tab.sliderSettings}\n                        </Container>\n                    </Row>\n\n                </Col>\n                {tab.canvas}\n            </Container>\n\n        </Tab >\n    ));\n\n    return (\n        <Container>\n            <Col>\n                <Tabs fill transition={false} key=\"rangeTab\" onSelect={(key,e)=>{\n                    props.data[key].simulator.start();\n                }}>\n                    {settingsList}\n                </Tabs>\n            </Col>\n        </Container>\n    );\n}","import { Button, Container } from 'react-bootstrap';\n\n//Maps the button data to actual buttons\n//Render the buttons\nexport default function Buttons(props) {\n    const buttonList = props.buttons.map(button => (\n        <>\n            {' '}\n            <Button as=\"input\" type=\"button\" size=\"sm\" value={button.name} key={button.key}></Button>\n        </>\n    ));\n    \n    return (\n        <Container variant=\"success\">\n            {buttonList}\n        </Container>\n    );\n}","//Author Burak Keser\n\n//Block object for the grid\nexport function Block(x, y, color, size,) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.size = size;\n    this.visited = false;\n    this.canvas = document.querySelector('canvas');\n    this.ctx = this.canvas.getContext('2d');;\n}\n\n//Draws an empty square for grid\nBlock.prototype.drawOuter = function () {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.rect(this.x, this.y, this.size, this.size);\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'white';\n    this.ctx.rect(this.x + 1, this.y + 1, this.size - 2, this.size - 2);\n    this.ctx.fill();\n}\n//Draw the inner square\nBlock.prototype.drawInner = function (color, c, z) {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = color;\n    this.ctx.rect(this.x + c, this.y + c, this.size - z, this.size - z);\n    this.ctx.fill();\n}\n\n//Deletion of the node from Screen\nBlock.prototype.delete = function () {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'white';\n    this.ctx.rect(this.x, this.y, this.size, this.size);\n    this.ctx.fill();\n}\n//Updates the position of the block\n//Used by moving block\nBlock.prototype.update = function (x, y) {\n    this.x = x;\n    this.y = y;\n}\n//Removes the Wall from given direction\nBlock.prototype.removeWall = function (direction) {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = 'grey';\n    let temp = this.size - 2;\n    switch (direction) {\n        case 'up':\n            this.ctx.rect(this.x + 1, this.y - 4, temp, temp);\n            break;\n        case 'down':\n            this.ctx.rect(this.x + 1, this.y + 4, temp, temp);\n            break;\n        case 'left':\n            this.ctx.rect(this.x - 4, this.y + 1, temp, temp);\n            break;\n        case 'right':\n            this.ctx.rect(this.x + 4, this.y + 1, temp, temp);\n            break;\n\n    }\n    this.ctx.fill();\n}\n","\nimport { Block } from './block'\n\nexport default function Simulator() {\n    this.blockSize = 20;\n}\n\nSimulator.prototype.start = function () {\n    this.newGrid()\n};\n\nSimulator.prototype.initSimulator = function (canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.gridRow = (this.height / this.blockSize) - 1;\n    this.girdColumn = (this.width / this.blockSize) - 1;\n    this.start();\n};\n\nSimulator.prototype.newGrid = function () {\n    let grid = [];\n    for (let i = 0; i < this.height; i += this.blockSize) {\n        let row = []\n        for (let j = 0; j < this.width; j += this.blockSize) {\n            let block = new Block(j, i, 'black', this.blockSize);\n            row.push(block);\n            block.drawOuter();\n            block.drawInner('white', 1, 2);\n        }\n        grid.push(row);\n    }\n    return grid;\n};","import Settings from './components/settings';\nimport { Container } from 'react-bootstrap';\nimport sliderList from './components/sliders'\nimport PageTabs from './components/pages'\nimport Buttons from './components/buttons'\nimport Simulator from './components/simulator'\nimport React, { useState, useEffect } from 'react';\nimport Canvas from './components/canvas';\n\n//Contains slider data for maze\nconst MAZE_SLIDER_DATA = [\n  { name: \"Grid Size\", id: \"grid-size\", current: \"5\", max: \"10\", min: \"1\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n];\n\n//Contains button data for maze\nconst MAZE_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"m1\" },\n  { name: \"Stop\", type: \"start\", key: \"m2\" },\n  { name: \"Reset\", type: \"reset\", key: \"m3\" }\n]\n\n//Contains slider data for pathfinding\nconst PATHFINDING_SLIDER_DATA = [\n  { name: \"Grid Size\", id: \"grid-size\", current: \"5\", max: \"10\", min: \"1\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n  { name: \"Block Size\", id: \"blockSize\", current: \"4\", max: \"10\", min: \"3\" },\n];\n\n//Contains button data for pathfinding\nconst PATHFINDING_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"p1\" },\n  { name: \"Stop\", type: \"start\", key: \"p2\" },\n  { name: \"Grid\", type: \"grid\", key: \"p3\" },\n  { name: \"Reset\", type: \"reset\", key: \"p4\" }\n]\n\n//Current maze settings \n//to be used on creation of the canvas field and simulation speed\nlet currentMazeSettings = {\n  gridSize: Number(MAZE_SLIDER_DATA[0].current),\n  speed: Number(MAZE_SLIDER_DATA[1].current)\n}\n\n//Current pathfinding settings \n//to be used on creation of the canvas field, simulation speed\n//and creation of block grid that can be used to create a maze for pathfinding\nlet currentPathfindingSettings = {\n  gridSize: Number(PATHFINDING_SLIDER_DATA[0].current),\n  blockSize: Number(PATHFINDING_SLIDER_DATA[1].current),\n  speed: Number(PATHFINDING_SLIDER_DATA[2].current)\n}\n\nlet simulator = new Simulator();\n\n//Contains main page settings\nconst MAIN_DATA = [\n  {\n    name: \"Maze Creator\",\n    id: 0,\n    currentSettings: currentMazeSettings,\n    sliderSettings: (<Settings settings={sliderList(MAZE_SLIDER_DATA, currentMazeSettings)} />),\n    buttonSettings: (<Buttons buttons={MAZE_BUTTON_DATA} />),\n    simulator: simulator\n  },\n  {\n    name: \"Pathfinding\",\n    id: 1,\n    currentSettings: currentPathfindingSettings,\n    sliderSettings: (<Settings settings={sliderList(PATHFINDING_SLIDER_DATA, currentPathfindingSettings)} />),\n    buttonSettings: (<Buttons buttons={PATHFINDING_BUTTON_DATA} />),\n    simulator: simulator\n  },\n];\n\nfunction App(props) {\n  return (\n    <Container className=\"bg-light rounded-top rounded-bottom\">\n      <PageTabs data={MAIN_DATA} />\n      \n      <Container style={{\n        marginTop: '0.5em'\n      }}>\n        <Canvas id={0} Simulator={simulator} />\n      </Container>\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\ndocument.body.style.backgroundColor = \"#0d6efd\";\nReactDOM.render(\n  <React.StrictMode >\n    <Container fluid>\n      <Container style={{\n        paddingTop: 10,\n        paddingBottom: 20\n      }} fluid>\n        <App />\n      </Container>\n\n    </Container>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}