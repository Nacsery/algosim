{"version":3,"sources":["components/settings.js","components/sliders.js","components/choiceTabs.js","components/buttons.js","App.js","index.js"],"names":["Settings","props","Col","Tabs","transition","settings","Slider","useState","current","setCurrent","Container","fluid","style","marginTop","marginBottom","Row","sm","xl","xs","lg","md","FormControl","type","defaultValue","max","min","onChange","changeEvent","target","value","id","Number","custom","InputGroup","size","Prepend","Text","sliderList","ranges","map","range","Tab","eventKey","title","name","ChoiceTabs","settingsList","choices","tab","buttonSettings","sliderSettings","fill","Buttons","buttonList","buttons","button","Button","as","key","variant","MAZE_SLIDER_DATA","PATHFINDING_SLIDER_DATA","currentMazeSettings","width","height","speed","currentPathfindingSettings","blockSize","MAIN_DATA","App","className","ReactDOM","render","StrictMode","paddingTop","document","getElementById"],"mappings":"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","file":"static/js/main.7b623a0d.chunk.js","sourcesContent":["import { Col, Tabs } from 'react-bootstrap';\n\nexport default function Settings(props) {\n    return (\n\n            <Col>\n                <Tabs transition={false} key=\"rangeTab\" >\n                    {props.settings}\n                </Tabs>\n            </Col>\n\n    );\n}","import React, { useState } from 'react';\nimport { FormControl, Row, Col, InputGroup, Tab, Container } from 'react-bootstrap';\n\nfunction Slider(props) {\n\n    const [current, setCurrent] = useState(0);\n\n    return (\n        <Container fluid>\n            <Container style={{\n                marginTop: '0.2em',\n                marginBottom: '0.2em'\n            }}>\n                <Row sm xl xs lg md={10}>\n\n                    <Col xs sm xl lg md={8}>\n                        <FormControl\n                            type=\"range\"\n                            defaultValue={props.current}\n                            max={props.max}\n                            min={props.min}\n                            key={props.id}\n                            onChange={(changeEvent => {\n                                setCurrent(changeEvent.target.value);\n                                props.settings[props.id] = Number(changeEvent.target.value);\n                            })} custom />\n                    </Col>\n                    <Col xs sm xl lg md={2}>\n\n                        <InputGroup size=\"sm\">\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>{current ? current : props.current}</InputGroup.Text>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n            </Container>\n\n        </Container>\n\n    );\n}\n\nexport default function sliderList(ranges, settings) {\n    const rangeList = ranges.map(range => (\n        <Tab\n            key={range.id}\n            eventKey={range.id}\n            title={range.name}\n        >\n            <Slider\n                id={range.id}\n                current={range.current}\n                max={range.max}\n                min={range.min}\n                key={range.id}\n                settings={settings} />\n        </Tab>\n    ));\n\n    return rangeList;\n}","import { Col, Container, Tabs, Tab, Row } from 'react-bootstrap';\n\nexport default function ChoiceTabs(props) {\n    const settingsList = props.choices.map(tab => (\n        <Tab\n            eventKey={tab.id}\n            title={tab.name}\n            key={tab.id}\n        >\n            <Container style={{\n                marginTop: '0.5em'\n            }}>\n                <Col>\n                    <Row >\n                        {tab.buttonSettings}\n                    </Row>\n                    <Row>\n                        <Container style={{\n                            marginTop: '0.4em'\n                        }}>\n                            {tab.sliderSettings}\n                        </Container>\n\n                    </Row>\n                </Col>\n            </Container>\n\n        </Tab >\n    ));\n\n    return (\n        <Container>\n            <Col>\n                <Tabs fill transition={false} key=\"rangeTab\">\n                    {settingsList}\n                </Tabs>\n            </Col>\n        </Container>\n    );\n}","import { Button, Container } from 'react-bootstrap';\n\n\nexport default function Buttons(props) {\n    const buttonList = props.buttons.map(button => (\n        <>\n            {' '}\n            <Button as=\"input\" type=\"button\" size=\"sm\" value={button.name} key={button.key}></Button>\n        </>\n    ));\n    \n    return (\n        <Container variant=\"success\">\n            {buttonList}\n        </Container>\n    );\n}","import Settings from './components/settings';\nimport { Container } from 'react-bootstrap';\nimport sliderList from './components/sliders'\nimport ChoiceTabs from './components/choiceTabs'\nimport Buttons from './components/buttons'\n\nconst MAZE_SLIDER_DATA = [\n  { name: \"Width\", id: \"width\", current: \"80\", max: \"100\", min: \"8\" },\n  { name: \"Height\", id: \"height\", current: \"45\", max: \"100\", min: \"8\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n];\n\nconst MAZE_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"m1\" },\n  { name: \"Stop\", type: \"start\", key: \"m2\" },\n  { name: \"Reset\", type: \"reset\", key: \"m3\" }\n]\n\nconst PATHFINDING_SLIDER_DATA = [\n  { name: \"Width\", id: \"width\", current: \"80\", max: \"100\", min: \"8\" },\n  { name: \"Height\", id: \"height\", current: \"45\", max: \"100\", min: \"8\" },\n  { name: \"Speed\", id: \"speed\", current: \"75\", max: \"100\", min: \"0\" },\n  { name: \"Block Size\", id: \"blockSize\", current: \"4\", max: \"10\", min: \"3\" },\n];\n\nconst PATHFINDING_BUTTON_DATA = [\n  { name: \"Start\", type: \"start\", key: \"p1\" },\n  { name: \"Stop\", type: \"start\", key: \"p2\" },\n  { name: \"Grid\", type: \"grid\", key: \"p3\" },\n  { name: \"Reset\", type: \"reset\", key: \"p4\" }\n]\n\nlet currentMazeSettings = {\n  width: Number(MAZE_SLIDER_DATA[0].current),\n  height: Number(MAZE_SLIDER_DATA[1].current),\n  speed: Number(MAZE_SLIDER_DATA[2].current)\n}\n\nlet currentPathfindingSettings = {\n  width: Number(PATHFINDING_SLIDER_DATA[0].current),\n  height: Number(PATHFINDING_SLIDER_DATA[1].current),\n  blockSize: Number(PATHFINDING_SLIDER_DATA[1].current),\n  speed: Number(PATHFINDING_SLIDER_DATA[2].current)\n}\n\nconst MAIN_DATA = [\n  {\n    name: \"Maze\",\n    id: \"maze\",\n    sliderSettings: (<Settings settings={sliderList(MAZE_SLIDER_DATA, currentMazeSettings)} />),\n    buttonSettings: (<Buttons buttons={MAZE_BUTTON_DATA} />)\n\n  },\n  {\n    name: \"Pathfinding\",\n    id: \"pathfinding\",\n    sliderSettings: (<Settings settings={sliderList(PATHFINDING_SLIDER_DATA, currentPathfindingSettings)} />),\n    buttonSettings: (<Buttons buttons={PATHFINDING_BUTTON_DATA} />)\n  },\n];\n\nfunction App(props) {\n  return (\n    <Container className=\"bg-light rounded-top\">\n      <ChoiceTabs choices={MAIN_DATA} />\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode >\n    <Container style={{\n      height: '100vh'\n    }}\n      className=\"bg-primary\" fluid>\n      <Container style={{\n        paddingTop: 10\n      }} fluid>\n        <App />\n      </Container>\n\n    </Container>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}